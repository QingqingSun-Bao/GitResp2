import matplotlib.pyplot as plt
import statsmodels.api  as sm
from matplotlib.pyplot import MultipleLocator
import numpy as np

D1={'cent': [0.25, 0.15000000000000002, 0.4166666666666667, 0.5, 0.05, 0.08333333333333333, 0.05, 0.30000000000000004, 0.08333333333333333, 0.05, 0.15000000000000002, 0.2, 0.11666666666666667, 0.15000000000000002, 0.08333333333333333, 0.4166666666666667, 0.18650793650793648, 0.11666666666666667, 0.375, 0.15000000000000002, 0.5, 0.35555555555555557, 0.2, 0.5, 0.3333333333333333, 0.15000000000000002, 0.30000000000000004, 0.08333333333333333, 0.1, 0.30000000000000004, 0.25, 0.5, 0.44047619047619047, 0.25, 0.3333333333333333, 0.4166666666666667, 0.15000000000000002, 0.5, 0.25, 0.3333333333333333, 0.15000000000000002, 0.05, 0.05, 0.30000000000000004, 0.5, 0.08333333333333333, 0.5, 0.16666666666666666, 0.08333333333333333, 0.08333333333333333, 0.2, 0.35, 0.22222222222222218, 0.5, 0.06666666666666667, 0.1, 0.30000000000000004, 0.2738095238095238, 0.23412698412698407, 0.25, 0.15000000000000002, 0.275, 0.25, 0.08333333333333333, 0.05, 0.15000000000000002, 0.3055555555555555, 0.2, 0.18333333333333332, 0.15000000000000002, 0.12698412698412698, 0.5, 0.15000000000000002, 0.05, 0.25, 0.08333333333333333, 0.15000000000000002, 0.25, 0.5, 0.16666666666666666, 0.30000000000000004, 0.25, 0.25, 0.05, 0.32936507936507936, 0.25, 0.1, 0.25, 0.375, 0.17500000000000002, 0.30000000000000004, 0.30000000000000004, 0.25, 0.05, 0.16666666666666666, 0.25, 0.2, 0.15000000000000002, 0.23412698412698407, 0.15000000000000002, 0.30000000000000004, 0.05, 0.30000000000000004, 0.1, 0.5, 0.16666666666666666, 0.25, 0.16666666666666666, 0.08333333333333333, 0.5, 0.2, 0.5, 0.1, 0.25, 0.15000000000000002, 0.05, 0.25, 0.16666666666666666, 0.08333333333333333, 0.25, 0.05, 0.05, 0.25, 0.16666666666666666, 0.30000000000000004, 0.15000000000000002, 0.13888888888888887, 0.3333333333333333, 0.15000000000000002, 0.15000000000000002, 0.3333333333333333, 0.3333333333333333, 0.25, 0.2976190476190476, 0.09523809523809523, 0.2, 0.08333333333333333, 0.1706349206349206, 0.30000000000000004, 0.3333333333333333], 'rich': [0.46666666666666656, 0.2857142857142856, 1.0, 1.0, 0.04761904761904767, 0.06666666666666665, 0.04761904761904767, 0.6031746031746031, 0.06666666666666665, 0.04761904761904767, 0.2857142857142856, 0.43877551020408156, 0.43877551020408156, 0.2857142857142856, 0.06666666666666665, 1.0, 0.7569444444444444, 0.43877551020408156, 1.0, 0.2857142857142856, 1.0, 1.0, 0.6938775510204082, 1.0, 0.6938775510204082, 0.2857142857142856, 0.6031746031746031, 0.06666666666666665, 0.43877551020408156, 0.6031746031746031, 0.46666666666666656, 1.0, 1.0, 0.6938775510204082, 0.6938775510204082, 1.0, 0.2857142857142856, 1.0, 0.46666666666666656, 0.6938775510204082, 0.2857142857142856, 0.04761904761904767, 0.04761904761904767, 0.6031746031746031, 1.0, 0.06666666666666665, 1.0, 0.6938775510204082, 0.06666666666666665, 0.06666666666666665, 0.43877551020408156, 1.0, 1.0, 1.0, 0.43877551020408156, 0.23469387755102034, 0.6031746031746031, 1.0, 0.7569444444444444, 0.46666666666666656, 0.2857142857142856, 1.0, 0.46666666666666656, 0.06666666666666665, 0.04761904761904767, 0.2857142857142856, 1.0, 0.6938775510204082, 0.6938775510204082, 0.2857142857142856, 0.548611111111111, 1.0, 0.2857142857142856, 0.04761904761904767, 0.46666666666666656, 0.06666666666666665, 0.2857142857142856, 0.46666666666666656, 1.0, 0.2499999999999999, 0.6031746031746031, 0.46666666666666656, 0.46666666666666656, 0.04761904761904767, 1.0, 0.46666666666666656, 0.23469387755102034, 0.46666666666666656, 1.0, 0.6031746031746031, 0.6031746031746031, 0.6031746031746031, 0.46666666666666656, 0.04761904761904767, 0.2499999999999999, 0.46666666666666656, 0.43877551020408156, 0.2857142857142856, 1.0, 0.2857142857142856, 0.6031746031746031, 0.04761904761904767, 0.6031746031746031, 0.23469387755102034, 1.0, 0.2499999999999999, 0.46666666666666656, 0.2499999999999999, 0.06666666666666665, 1.0, 0.43877551020408156, 1.0, 0.23469387755102034, 0.46666666666666656, 0.2857142857142856, 0.04761904761904767, 0.46666666666666656, 0.2499999999999999, 0.06666666666666665, 0.46666666666666656, 0.04761904761904767, 0.04761904761904767, 0.46666666666666656, 0.2499999999999999, 0.6031746031746031, 0.2857142857142856, 0.6938775510204082, 0.6938775510204082, 0.2857142857142856, 0.2857142857142856, 0.6938775510204082, 0.6938775510204082, 0.46666666666666656, 0.7569444444444444, 0.7569444444444444, 0.43877551020408156, 0.06666666666666665, 0.7569444444444444, 0.6031746031746031, 0.6938775510204082]}
D={'cent': [0.30000000000000004, 0.1, 0.23809523809523808, 0.15000000000000002, 0.03333333333333333, 0.05, 0.15000000000000002, 0.08333333333333333, 0.15000000000000002, 0.05, 0.2, 0.08333333333333333, 0.05, 0.15000000000000002, 0.08333333333333333, 0.25, 0.15000000000000002, 0.25, 0.08333333333333333, 0.15000000000000002, 0.03333333333333333, 0.1, 0.2976190476190476, 0.24761904761904766, 0.19444444444444442, 0.08333333333333333, 0.13333333333333333, 0.15000000000000002, 0.05], 'rich': [0.6031746031746031, 0.23469387755102034, 0.548611111111111, 0.2857142857142856, 0.08163265306122458, 0.04761904761904767, 0.2857142857142856, 0.06666666666666665, 0.2857142857142856, 0.04761904761904767, 0.43877551020408156, 0.06666666666666665, 0.04761904761904767, 0.2857142857142856, 0.06666666666666665, 0.46666666666666656, 0.2857142857142856, 0.46666666666666656, 0.06666666666666665, 0.2857142857142856, 0.08163265306122458, 0.23469387755102034, 0.7569444444444444, 1.0, 0.7569444444444444, 0.06666666666666665, 0.6938775510204082, 0.2857142857142856, 0.04761904761904767]}

print(len(D["rich"]+D1["rich"]))
print(len(D["cent"]+D1["cent"]))
X = sm.add_constant(D["rich"]+D1["rich"])
te = np.array(D["cent"]+D1["cent"])
model = sm.OLS(te, X).fit()
print(model.summary())
y_fitted = model.fittedvalues
plt.scatter(D["rich"],D["cent"],c="turquoise",label="Chain",s=60)
plt.scatter(D1["rich"],D1["cent"],facecolor="none",edgecolors="darkcyan",s=50,label="Loop")
ax = plt.gca()
ax.yaxis.set_major_locator(MultipleLocator(0.2))
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)
# ax.set_xticks([0.1,0.2,0.3,0.4,0.5])
# ax.set_xticklabels(['2010', '2012', '2014', '2016', '2018', '2020'])
plt.xlabel("Complexity of Competitive Networks",size=15)
plt.ylabel("Betweeness Centrality",size=15)
plt.ylim(0, 0.6)
plt.plot(D["rich"]+D1["rich"], y_fitted, 'black')
plt.text(0.2,0.4,r"$r^2=%.3f***$"%model.rsquared,fontdict={"size":15})
plt.legend()

plt.show()